type User {
  id: ID! @unique @id
  email: String! @unique
  name: String!
  countryCode: String
  phoneNumber: String
  favoriteTeam: Team
  country: Country
  displayName: String! @unique
  isPrivate: Boolean! @default(value: false)
  password: String!
  photos: [UserPhoto]!
  emailValidationToken: String
  emailValidationTokenExpiry: Float
  emailValidated: Boolean! @default(value: false)
  emailValidationDate: DateTime
  resetToken: String
  resetTokenExpiry: Float
  subscriptions: [FandemSubscription!]!
  userRoles: [UserRole!]!
  status: [UserStatus]!
  followers: UserFollowers @relation(link: INLINE)
  influencers: UserInfluencers @relation(link: INLINE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type UserPhoto {
  id: ID! @unique @id
  user: User!
  photo: Photo!
  isProfile: Boolean
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Photo {
  id: ID! @unique @id
  image: String!
  largeImage: String
  smallImage: String
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Status {
  id: ID! @unique @id
  author: UserStatus @relation(link: INLINE)
  content: String!
  likes: [User]!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type UserStatus {
  id: ID! @unique @id
  status: Status
  currentStatus: Boolean
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Follower {
  id: ID! @unique @id
  user: User! @relation(link: INLINE)
  blocked: Boolean! @default(value: false)
  accepted: Boolean! @default(value: false)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type UserFollowers {
  id: ID! @unique @id
  followers: [Follower]!
  user: User!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Influencer {
  id: ID! @unique @id
  user: User! @relation(link: INLINE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type UserInfluencers {
  id: ID! @unique @id
  user: User!
  influencers: [Influencer]!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type UserRole {
  id: ID! @unique @id
  name: String!
  description: String!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type UserAssignedRole {
  id: ID! @unique @id
  user: User!
  userRole: UserRole!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type ActiveSubscriptions {
  id: ID! @unique @id
  user: User!
  subscription: UserRole!
  startDate: DateTime!
  endDate: DateTime!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type FandemSubscription {
  id: ID! @unique @id
  name: String!
  description: String!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Country {
  id: ID! @unique @id
  iso: String!
  name: String!
  code: String!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Team {
  id: ID! @unique @id
  code: Int! @unique
  season: Season!
  fplTeamId: Int!
  name: String!
  shortName: String!
  strength: Int!
  strengthAttackAway: Int!
  strengthAttackHome: Int!
  strengthDefenceAway: Int!
  strengthDefenceHome: Int!
  strengthOverallAway: Int!
  strengthOverallHome: Int!
  teamDivision: Int
  homeFixtures: [HomeTeamFixture]!
  awayFixtures: [AwayTeamFixture]!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Season {
  id: ID! @unique @id
  fplId: Int! @unique
  label: String!
  competition: String!
  startYear: Int!
  endYear: Int!
  isCurrent: Boolean!
  isPrevious: Boolean!
  isNext: Boolean!
  events: [Gameweek]!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Gameweek {
  id: ID! @unique @id
  season: Season! @relation(link: INLINE)
  averageEntryScore: Int
  dataChecked: Boolean!
  deadlineTime: DateTime!
  deadlineTimeEpoch: Int!
  deadlineTimeGameOffset: Int!
  finished: Boolean!
  highestScore: Int
  highestScoringEntry: Int
  fplEventId: Int! @unique
  isCurrent: Boolean!
  isNext: Boolean!
  isPrevious: Boolean!
  name: String!
  fixtures: [Fixture]!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type HomeTeamFixture {
  id: ID! @unique @id
  fixture: Fixture! @relation(link: INLINE)
  homeTeam: Team!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type AwayTeamFixture {
  id: ID! @unique @id
  fixture: Fixture! @relation(link: INLINE)
  awayTeam: Team!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Fixture {
  id: ID! @unique @id
  fplCode: Int! @unique
  event: Gameweek! @relation(link: INLINE)
  finished: Boolean!
  finishedProvisional: Boolean!
  fixtureId: Int!
  kickoffTime: DateTime
  minutes: Int!
  provisionalStartTime: Boolean!
  started: Boolean!
  teamA: AwayTeamFixture!
  teamADifficulty: Int!
  teamAScore: Int
  teamH: HomeTeamFixture!
  teamHDifficulty: Int!
  teamHScore: Int
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type ContestType {
  id: ID! @unique @id
  name: String! @unique
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type ContestCreator {
  id: ID! @unique @id
  user: User! @relation(link: INLINE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type ContestOwner {
  id: ID! @unique @id
  user: User! @relation(link: INLINE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Contest {
  id: ID! @unique @id
  contestName: String!
  isActive: Boolean! @default(value: true)
  isDefault: Boolean! @default(value: true)
  isAll: Boolean! @default(value: false)
  isPublic: Boolean!
  invitationCode: String! @unique
  startDate: DateTime!
  endDate: DateTime
  isPremium: Boolean! @default(value: false)
  playerLimit: Int! @default(value: 50)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  createdBy: ContestCreator!
  currentOwner: ContestOwner!
  contestType: ContestType! @relation(link: INLINE)
  scoringSystem: ScoringSystemHeader! @relation(link: INLINE)
  users: [ContestUser!]!
  contestSlates: [ContestSlate]!
}

type ContestUserType {
  id: ID! @unique @id
  name: String! @unique
  description: String
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type ContestInviter {
  id: ID! @unique @id
  user: User! @relation(link: INLINE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type ContestUser {
  id: Int! @unique @id
  isInvited: Boolean! @default(value: false)
  isActive: Boolean! @default(value: false)
  isBlocked: Boolean! @default(value: false)
  balance: Int! @default(value: 0)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  user: User! @relation(link: INLINE)
  contest: Contest!
  invitedBy: ContestInviter
  userType: ContestUserType!
}

type ContestSlate {
  id: Int! @unique @id
  fromDefault: Boolean! @default(value: true)
  isActive: Boolean! @default(value: false)
  startDate: DateTime!
  endDate: DateTime
  hasStarted: Boolean! @default(value: false)
  hasFinished: Boolean! @default(value: false)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  contest: Contest! @relation(link: INLINE)
  gameweekId: Gameweek @relation(link: INLINE)
  entries: [ContestSlateEntry]!
}

type ContestSlateEntry {
  id: Int! @unique @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  slate: ContestSlate! @relation(link: INLINE)
  fixture: Fixture!
  predictions: [ContestPrediction]!
}

type ContestPrediction {
  id: Int! @unique @id
  homeScore: Int!
  awayScore: Int!
  expectedResult: String!
  homeScoreMatches: Boolean! @default(value: false)
  awayScoreMatches: Boolean! @default(value: false)
  scoresMatch: Boolean! @default(value: false)
  resultMatches: Boolean! @default(value: false)
  isBanker: Boolean! @default(value: false)
  hasFinished: Boolean! @default(value: false)
  deadlineTime: DateTime!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  contestSlateEntry: ContestSlateEntry! @relation(link: INLINE)
  contestUser: ContestUser! @relation(link: INLINE)
  predictionResult: [ContestPredictionScore]!
}

type ScoringType {
  id: ID! @unique @id
  name: String! @unique
  description: String!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type DefaultScoringSystemHeader {
  id: ID! @unique @id
  name: String!
  description: String
  isCustom: Boolean! @default(value: true)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  systemDetail: [DefaultScoringSystemDetail!]!
}

type DefaultScoringSystemDetail {
  id: ID! @unique @id
  name: String!
  description: String!
  isActive: Boolean! @default(value: true)
  isDefault: Boolean! @default(value: true)
  startDate: DateTime! @default(value: "2019-08-09T19:00:00.000Z")
  endDate: DateTime
  points: Int! @default(value: 1)
  range: Int! @default(value: 0)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  scoringSystem: DefaultScoringSystemHeader! @relation(link: INLINE)
  scoringType: ScoringType! @relation(link: INLINE)
}
 
type ScoringSystemHeader {
  id: ID! @unique @id
  isCustom: Boolean!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  contest: Contest!
  inheritedFrom: DefaultScoringSystemHeader
  detail: [ScoringSystemDetail!]!
}

type ScoringSystemDetail {
  id: ID! @unique @id
  name: String!
  description: String
  isActive: Boolean! @default(value: true)
  isDefault: Boolean! @default(value: true)
  startDate: DateTime!
  endDate: DateTime
  points: Int!
  range: Int!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  scoringType: ScoringType!
  lastModifiedBy: User! @relation(link: INLINE)
  system: ScoringSystemHeader! @relation(value: INLINE)
  inheritedFrom: DefaultScoringSystemDetail!
}

type ContestPredictionScore {
  id: ID! @unique @id
  pointsAvailable: Int! @default(value: 0)
  pointsScored: Int! @default(value: 0)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  scoringDetail: ScoringSystemDetail! @relation(link: INLINE)
  contestPrediciton: ContestPrediction! @relation(link: INLINE)
}
