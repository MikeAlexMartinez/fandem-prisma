# import * from './generated/prisma.graphql'

type SuccessMessage {
  message: String
}

type Mutation {
  createUser(
    name: String!
    email: String!
    password: String!
    displayName: String!
  ): User!
  signIn(email: String!, password: String!): User!
  signOut: SuccessMessage
  requestEmailValidation: SuccessMessage
  validateEmail(emailValidationToken: String!): SuccessMessage
  requestReset(email: String!): SuccessMessage
  resetPassword(
    resetToken: String!
    password: String!
    confirmPassword: String!
  ): User!
  updateUserProfile(
    displayName: String!
    isPrivate: Boolean!
    name: String
    favoriteTeamId: ID
    countryId: ID
  ): User!
  addProfilePicture(image: String!): UserPhoto!
}

type Query {
  checkEmail(email: String!): Boolean!
  checkDisplayName(displayName: String!): Boolean!
  userByDisplayName(displayName: String!): User
  teams(orderBy: TeamOrderByInput): [Team!]!
  currentUser: User
  countries(orderBy: CountryOrderByInput): [Country!]!
}

# hide password and resetToken fields
type User {
  id: ID!
  email: String!
  name: String!
  countryCode: String
  phoneNumber: String
  favoriteTeam: Team
  country: Country
  displayName: String
  isPrivate: Boolean
  emailValidated: Boolean!
  subscriptions: [Subscription!]!
  userRoles: [UserRole!]!
  photos(where: UserPhotoWhereInput): [UserPhoto]
  status: [UserStatus]!
  followers: UserFollower!
  influencers: UserInfluencer!
}

type Country {
  id: ID
  iso: String
  name: String
  code: String
}

type Team {
  id: ID
  code: Int
  fplTeamId: Int
  name: String
  shortName: String
  strength: Int
  strengthAttackAway: Int
  strengthAttackHome: Int
  strengthDefenceAway: Int
  strengthDefenceHome: Int
  strengthOverallAway: Int
  strengthOverallHome: Int
  teamDivision: Int
}
